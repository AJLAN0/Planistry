# Generated by Django 5.1.6 on 2025-03-04 15:19

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="NotificationLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("sent", "Sent"),
                            ("failed", "Failed"),
                            ("delivered", "Delivered"),
                        ],
                        max_length=20,
                    ),
                ),
                ("delivery_method", models.CharField(max_length=50)),
                ("attempt_count", models.IntegerField(default=0)),
                ("last_attempt", models.DateTimeField(blank=True, null=True)),
                ("error_message", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "notification log",
                "verbose_name_plural": "notification logs",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="NotificationPreference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email_notifications", models.BooleanField(default=True)),
                (
                    "email_frequency",
                    models.CharField(
                        choices=[
                            ("immediate", "Immediate"),
                            ("daily", "Daily Digest"),
                            ("weekly", "Weekly Digest"),
                        ],
                        default="immediate",
                        max_length=20,
                    ),
                ),
                ("push_notifications", models.BooleanField(default=True)),
                ("quiet_hours_start", models.TimeField(blank=True, null=True)),
                ("quiet_hours_end", models.TimeField(blank=True, null=True)),
                ("notify_assignment_due", models.BooleanField(default=True)),
                ("notify_study_session", models.BooleanField(default=True)),
                ("notify_quiz_available", models.BooleanField(default=True)),
                ("notify_progress_updates", models.BooleanField(default=True)),
                (
                    "reminder_advance_time",
                    models.IntegerField(default=24, help_text="Hours before deadline"),
                ),
                (
                    "reminder_frequency",
                    models.CharField(
                        choices=[
                            ("once", "Once"),
                            ("daily", "Daily"),
                            ("custom", "Custom"),
                        ],
                        default="once",
                        max_length=20,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "notification preference",
                "verbose_name_plural": "notification preferences",
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("message", models.TextField()),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("assignment", "Assignment"),
                            ("study_session", "Study Session"),
                            ("quiz", "Quiz"),
                            ("progress", "Progress"),
                            ("system", "System"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=20,
                    ),
                ),
                ("object_id", models.PositiveIntegerField(blank=True, null=True)),
                ("is_read", models.BooleanField(default=False)),
                ("is_dismissed", models.BooleanField(default=False)),
                ("read_at", models.DateTimeField(blank=True, null=True)),
                ("scheduled_for", models.DateTimeField()),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]
